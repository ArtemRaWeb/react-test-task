{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Github/react-test-task/src/components/BaseTable/BaseTable.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Sydney\", \"Moscow\", \"Berlin\", \"Rome\", \"Toronto\", \"Beijing\"];\nconst countries = [\"USA\", \"UK\", \"France\", \"Japan\", \"Australia\", \"Russia\", \"Germany\", \"Italy\", \"Canada\", \"China\"];\nconst BaseTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(100);\n  const generateRandomData = useCallback(() => {\n    let data = [];\n    for (let i = 0; i < 20; i++) {\n      data.push({\n        name: `Person${i + 1}`,\n        city: cities[Math.floor(Math.random() * cities.length)],\n        country: countries[Math.floor(Math.random() * countries.length)],\n        \"income-amount\": Math.floor(Math.random() * 1000000),\n        \"total-revenue\": Math.floor(Math.random() * 1000000)\n      });\n    }\n    return data;\n  }, []);\n  useEffect(() => {\n    const generetedData = generateRandomData();\n    console.log(\"generetedData: \", generetedData);\n    setData(generetedData);\n  }, [generateRandomData]);\n  const filteredData = data.filter(item => item.incomeAmount >= minValue && item.incomeAmount <= maxValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Income range:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: maxValue,\n        value: minValue,\n        onChange: event => setMinValue(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: minValue,\n        max: maxValue,\n        value: maxValue,\n        onChange: event => setMaxValue(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Income Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredData.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.incomeAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalRevenue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseTable, \"Sksfaomkt/nYpvey2c8yZpaseu4=\");\n_c = BaseTable;\nexport default BaseTable;\nvar _c;\n$RefreshReg$(_c, \"BaseTable\");","map":{"version":3,"names":["useCallback","useEffect","useState","jsxDEV","_jsxDEV","cities","countries","BaseTable","_s","data","setData","minValue","setMinValue","maxValue","setMaxValue","generateRandomData","i","push","name","city","Math","floor","random","length","country","generetedData","console","log","filteredData","filter","item","incomeAmount","children","type","min","max","value","onChange","event","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","totalRevenue","_c","$RefreshReg$"],"sources":["/Users/artem/Github/react-test-task/src/components/BaseTable/BaseTable.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nconst cities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Sydney\", \"Moscow\", \"Berlin\", \"Rome\", \"Toronto\", \"Beijing\"];\nconst countries = [\"USA\", \"UK\", \"France\", \"Japan\", \"Australia\", \"Russia\", \"Germany\", \"Italy\", \"Canada\", \"China\"];\n\nconst BaseTable = () => {\n  const [data, setData] = useState([]);\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(100);\n\n  const generateRandomData = useCallback(() => {\n    let data = [];\n    for (let i = 0; i < 20; i++) {\n      data.push({\n        name: `Person${i + 1}`,\n        city: cities[Math.floor(Math.random() * cities.length)],\n        country: countries[Math.floor(Math.random() * countries.length)],\n        \"income-amount\": Math.floor(Math.random() * 1000000),\n        \"total-revenue\": Math.floor(Math.random() * 1000000),\n      });\n    }\n    return data;\n  }, []);\n\n  useEffect(() => {\n    const generetedData = generateRandomData();\n    console.log(\"generetedData: \", generetedData);\n    setData(generetedData);\n  }, [generateRandomData]);\n\n  const filteredData = data.filter((item) => item.incomeAmount >= minValue && item.incomeAmount <= maxValue);\n\n  return (\n    <div>\n      <label>\n        Income range:\n        <input\n          type=\"range\"\n          min=\"0\"\n          max={maxValue}\n          value={minValue}\n          onChange={(event) => setMinValue(Number(event.target.value))}\n        />\n        <input\n          type=\"range\"\n          min={minValue}\n          max={maxValue}\n          value={maxValue}\n          onChange={(event) => setMaxValue(Number(event.target.value))}\n        />\n      </label>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>City</th>\n            <th>Country</th>\n            <th>Income Amount</th>\n            <th>Total Revenue</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredData.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.city}</td>\n              <td>{item.country}</td>\n              <td>{item.incomeAmount}</td>\n              <td>{item.totalRevenue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BaseTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}