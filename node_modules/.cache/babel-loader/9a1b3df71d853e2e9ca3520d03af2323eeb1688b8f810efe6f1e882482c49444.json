{"ast":null,"code":"var _jsxFileName = \"/Users/artem/Github/react-test-task/src/components/BaseTable/BaseTable.jsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useEffect, useState } from \"react\";\nimport { debounce } from \"../../helpers/debouncer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst limit = 100000;\nconst cities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Sydney\", \"Moscow\", \"Berlin\", \"Rome\", \"Toronto\", \"Beijing\"];\nconst countries = [\"USA\", \"UK\", \"France\", \"Japan\", \"Australia\", \"Russia\", \"Germany\", \"Italy\", \"Canada\", \"China\"];\nconst BaseTable = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(limit);\n  const generateRandomData = useCallback(() => {\n    let arr = [];\n    for (let i = 0; i < 20; i++) {\n      arr.push({\n        name: `Person${i + 1}`,\n        city: cities[Math.floor(Math.random() * cities.length)],\n        country: countries[Math.floor(Math.random() * countries.length)],\n        incomeAmount: Math.floor(Math.random() * limit),\n        totalRevenue: Math.floor(Math.random() * limit)\n      });\n    }\n    const filteredData = arr.filter(item => item.incomeAmount >= minValue && item.incomeAmount <= maxValue);\n    setData(filteredData);\n  }, []);\n  useEffect(() => {\n    debounce(generateRandomData(), 1000);\n  }, [generateRandomData, minValue, maxValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Income range:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: limit,\n        value: minValue,\n        onChange: event => setMinValue(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: limit,\n        value: maxValue,\n        onChange: event => setMaxValue(Number(event.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Income Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Total Revenue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.city\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.incomeAmount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.totalRevenue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(BaseTable, \"W5Ik3Yq053snJid3n7/C38FgNnk=\");\n_c = BaseTable;\nexport default BaseTable;\nvar _c;\n$RefreshReg$(_c, \"BaseTable\");","map":{"version":3,"names":["useCallback","useEffect","useState","debounce","jsxDEV","_jsxDEV","limit","cities","countries","BaseTable","_s","data","setData","minValue","setMinValue","maxValue","setMaxValue","generateRandomData","arr","i","push","name","city","Math","floor","random","length","country","incomeAmount","totalRevenue","filteredData","filter","item","children","type","min","max","value","onChange","event","Number","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["/Users/artem/Github/react-test-task/src/components/BaseTable/BaseTable.jsx"],"sourcesContent":["import { useCallback, useEffect, useState } from \"react\";\n\nimport { debounce } from \"../../helpers/debouncer\";\n\nconst limit = 100000;\nconst cities = [\"New York\", \"London\", \"Paris\", \"Tokyo\", \"Sydney\", \"Moscow\", \"Berlin\", \"Rome\", \"Toronto\", \"Beijing\"];\nconst countries = [\"USA\", \"UK\", \"France\", \"Japan\", \"Australia\", \"Russia\", \"Germany\", \"Italy\", \"Canada\", \"China\"];\n\nconst BaseTable = () => {\n  const [data, setData] = useState([]);\n  const [minValue, setMinValue] = useState(0);\n  const [maxValue, setMaxValue] = useState(limit);\n\n  const generateRandomData = useCallback(() => {\n    let arr = [];\n    for (let i = 0; i < 20; i++) {\n      arr.push({\n        name: `Person${i + 1}`,\n        city: cities[Math.floor(Math.random() * cities.length)],\n        country: countries[Math.floor(Math.random() * countries.length)],\n        incomeAmount: Math.floor(Math.random() * limit),\n        totalRevenue: Math.floor(Math.random() * limit),\n      });\n    }\n    const filteredData = arr.filter((item) => item.incomeAmount >= minValue && item.incomeAmount <= maxValue);\n    setData(filteredData);\n  }, []);\n\n  useEffect(() => {\n    debounce(generateRandomData(), 1000);\n  }, [generateRandomData, minValue, maxValue]);\n\n  return (\n    <div>\n      <label>\n        Income range:\n        <input\n          type=\"range\"\n          min=\"0\"\n          max={limit}\n          value={minValue}\n          onChange={(event) => setMinValue(Number(event.target.value))}\n        />\n        <input\n          type=\"range\"\n          min=\"0\"\n          max={limit}\n          value={maxValue}\n          onChange={(event) => setMaxValue(Number(event.target.value))}\n        />\n      </label>\n      <table>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>City</th>\n            <th>Country</th>\n            <th>Income Amount</th>\n            <th>Total Revenue</th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.map((item, index) => (\n            <tr key={index}>\n              <td>{item.name}</td>\n              <td>{item.city}</td>\n              <td>{item.country}</td>\n              <td>{item.incomeAmount}</td>\n              <td>{item.totalRevenue}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default BaseTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}